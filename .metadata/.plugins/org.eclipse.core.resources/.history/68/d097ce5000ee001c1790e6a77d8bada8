package com.example.CompanyStockPrice.Repository;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.example.CompanyStockPrice.Entity.Stock;

@Repository
public interface StockRepository extends JpaRepository<Stock, Integer> {

	List<Stock> findByCompanyCode(int companyCode);
	
	@Modifying
	@Query("delete from Stock stock where stock.companyCode = :companyCode")
	void deleteAllStockForCompany(@Param("companyCode") int companyCode);
	
	@Query("select stock from Stock stock where stock.companyCode = :companyCode and (stock.stockDate between :fromDt AND :endDt)")
	List<Stock> findByCompanyCodeAndBetweenDates(@Param("companyCode") int companyCode,@Param("fromDt") LocalDate fromDt,@Param("endDt") LocalDate endDt);
/*	
	@Query("select min(stock.price) from Stock stock where stock.companyCode = : companyCode and (stock.stockDate between :fromDt AND :endDt)")
	int findByMinPrice(@Param("companyCode") int companyCode,@Param("fromDt") LocalDate fromDate,@Param("endDt") LocalDate endDate);
	
	@Query("select max(stock.price) from Stock stock where stock.companyCode = : companyCode and (stock.stockDate between :fromDt AND :endDt)")
	int findByMaxPrice(@Param("companyCode") int companyCode,@Param("fromDt") LocalDate fromDate,@Param("endDt") LocalDate endDate);
*/
	@Query("select stock.price from Stock stock where stock.companyCode = : companyCode and (stock.stockDate between :fromDt AND :endDt)")
	List<Double> findByAvaragePrice(@Param("companyCode") int companyCode,@Param("fromDt") LocalDate fromDt,@Param("endDt") LocalDate endDt);
	
}
